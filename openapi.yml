openapi: "3.0.0"
info:
  title: Exchange API
  version: "1.0"
servers:
  - url: http://localhost:8080/
components:
  securitySchemes:
    AuthToken:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    TradeOrder:
      type: object
      properties:
        amount:
          type: string
          description: Amount of USD to trade
        price:
          type: string
          description: Price in RUB
        type:
          type: string
          enum: [buy, sell]
          description: Type of the order (buy/sell)
      required:
        - amount
        - price
        - type
    Balance:
      type: object
      properties:
        usd:
          type: number
          description: Amount of USD
        rub:
          type: number
          description: Amount of RUB
      required:
        - usd
        - rub
    Deal:
      type: object
      properties:
        id:
          type: string
          description: Deal ID
        buy_order_id:
          type: string
          description: ID of the buy order
        sell_order_id:
          type: string
          description: ID of the sell order
        amount:
          type: number
          format: float
          description: Amount of USD traded
        price:
          type: number
          format: float
          description: Price in RUB
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the deal
      required:
        - id
        - buy_order_id
        - sell_order_id
        - amount
        - price
        - timestamp

paths:
  /register:
    post:
      description: Register a new user
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: Missing required parameters
        '409':
          description: User already exists

  /login:
    post:
      description: User login
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Authorization token
        '400':
          description: Missing required parameters

  /balance:
    get:
      security:
        - AuthToken: []
      description: Get user's balance in USD and RUB
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        '401':
          description: Unauthorized

  /orders:
    post:
      security:
        - AuthToken: []
      description: Place a new order (buy or sell USD for RUB)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TradeOrder'
      responses:
        '200':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeOrder'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
    get:
      security:
        - AuthToken: []
      description: List active orders for the user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TradeOrder'
        '401':
          description: Unauthorized

  /orders/{id}:
    get:
      security:
        - AuthToken: []
      description: Get order details by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeOrder'
        '400':
          description: Invalid order ID
        '401':
          description: Unauthorized
        '404':
          description: Order not found

    delete:
      security:
        - AuthToken: []
      description: Cancel an active order
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the cancelled order
        '400':
          description: Invalid order ID
        '401':
          description: Unauthorized
        '404':
          description: Order not found
  /deals:
    get:
      security:
        - AuthToken: []
      description: Get list of user's deals
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Deal'
        '401':
          description: Unauthorized